<?xml version="1.0" encoding="UTF-8"?>
<!--
scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true">
  <property name="APP_Name" value="netty-client"/>
  <property name="LOG_HOME" value="/data/logs"/>
  <!-- 设置上下文名称：<contextName> -->
  <contextName>${APP_Name}</contextName>


  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>
        [ %-5level] [%date{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %logger{96} [%line] - %msg%n
      </pattern>
      <charset>GBK</charset>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>DEBUG</level>
    </filter>
  </appender>

  <appender name="root" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <encoder>
      <pattern>
        [ %-5level] [%date{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %logger{96} [%line] - %msg%n
      </pattern>
      <charset>UTF-8</charset>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_HOME}/${APP_Name}/${APP_Name}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>512 MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>DEBUG</level>
    </filter>
    <prudent>true</prudent>
  </appender>




  <!--
      <root>
      也是<loger>元素，但是它是根loger。只有一个level属性，应为已经被命名为"root".
      level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。
      默认是DEBUG。
      <root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。
   -->
  <root level="DEBUG">
    <appender-ref ref="root"/>
    <appender-ref ref="STDOUT"/>
  </root>
  <!--
    <loger>
  用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。
  name: 用来指定受此loger约束的某一个包或者具体的某一个类。
  level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。
  如果未设置此属性，那么当前loger将会继承上级的级别。
  addtivity: 是否向上级loger传递打印信息。默认是true。
  <loger>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。
  如下所示：
  <logger  name="message" level="DEBUG">
          <appender-ref ref="message" />
    </logger>
   -->
  <logger name="org.hibernate" level="WARN"/>
  <logger name="ch.qos.logback" level="WARN"/>
  <logger name="org.springframework" level="WARN"/>
  <logger name="org.apache" level="WARN"/>
</configuration>
